// <auto-generated />
using System;
using ContactApp.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ContactApp.API.Migrations
{
    [DbContext(typeof(ContactDbContext))]
    [Migration("20211221152352_RemoveIndexOnContactInfo")]
    partial class RemoveIndexOnContactInfo
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ContactApp.API.Data.Model.Contact", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Firm")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Contacts");

                    b.HasData(
                        new
                        {
                            Id = "e96bb9b2-0d70-4c8f-8344-20872e24010c",
                            CreatedAt = new DateTime(2021, 12, 21, 15, 23, 51, 585, DateTimeKind.Utc).AddTicks(6017),
                            Firm = "Rise Consulting",
                            FirstName = "Hasan",
                            IsDeleted = false,
                            LastName = "Erdal",
                            UpdatedAt = new DateTime(2021, 12, 21, 15, 23, 51, 585, DateTimeKind.Utc).AddTicks(6307)
                        },
                        new
                        {
                            Id = "06aa8dd6-12b2-45f0-9087-222889639d1c",
                            CreatedAt = new DateTime(2021, 12, 21, 15, 23, 51, 585, DateTimeKind.Utc).AddTicks(6796),
                            Firm = "No Firm",
                            FirstName = "Mehmet",
                            IsDeleted = false,
                            LastName = "Erdal",
                            UpdatedAt = new DateTime(2021, 12, 21, 15, 23, 51, 585, DateTimeKind.Utc).AddTicks(6798)
                        },
                        new
                        {
                            Id = "13539989-0439-4698-b694-ad6a8e65d5ab",
                            CreatedAt = new DateTime(2021, 12, 21, 15, 23, 51, 585, DateTimeKind.Utc).AddTicks(6800),
                            Firm = "No Firm",
                            FirstName = "Mustafa",
                            IsDeleted = false,
                            LastName = "Erdal",
                            UpdatedAt = new DateTime(2021, 12, 21, 15, 23, 51, 585, DateTimeKind.Utc).AddTicks(6801)
                        });
                });

            modelBuilder.Entity("ContactApp.API.Data.Model.ContactInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ContactId")
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("ContactId");

                    b.ToTable("ContactInfos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ContactId = "e96bb9b2-0d70-4c8f-8344-20872e24010c",
                            CreatedAt = new DateTime(2021, 12, 21, 15, 23, 51, 587, DateTimeKind.Utc).AddTicks(2639),
                            IsDeleted = false,
                            Key = "Telefon Numarası",
                            UpdatedAt = new DateTime(2021, 12, 21, 15, 23, 51, 587, DateTimeKind.Utc).AddTicks(2646),
                            Value = "+90 537 035 2059"
                        },
                        new
                        {
                            Id = 2,
                            ContactId = "e96bb9b2-0d70-4c8f-8344-20872e24010c",
                            CreatedAt = new DateTime(2021, 12, 21, 15, 23, 51, 587, DateTimeKind.Utc).AddTicks(2649),
                            IsDeleted = false,
                            Key = "E-Mail Adresi",
                            UpdatedAt = new DateTime(2021, 12, 21, 15, 23, 51, 587, DateTimeKind.Utc).AddTicks(2650),
                            Value = "hasaerda@hotmail.com"
                        },
                        new
                        {
                            Id = 3,
                            ContactId = "e96bb9b2-0d70-4c8f-8344-20872e24010c",
                            CreatedAt = new DateTime(2021, 12, 21, 15, 23, 51, 587, DateTimeKind.Utc).AddTicks(2651),
                            IsDeleted = false,
                            Key = "Konum",
                            UpdatedAt = new DateTime(2021, 12, 21, 15, 23, 51, 587, DateTimeKind.Utc).AddTicks(2652),
                            Value = "Şahinbey/Gaziantep"
                        },
                        new
                        {
                            Id = 4,
                            ContactId = "06aa8dd6-12b2-45f0-9087-222889639d1c",
                            CreatedAt = new DateTime(2021, 12, 21, 15, 23, 51, 587, DateTimeKind.Utc).AddTicks(2653),
                            IsDeleted = false,
                            Key = "Telefon Numarası",
                            UpdatedAt = new DateTime(2021, 12, 21, 15, 23, 51, 587, DateTimeKind.Utc).AddTicks(2654),
                            Value = "+90 537 035 2059"
                        },
                        new
                        {
                            Id = 5,
                            ContactId = "06aa8dd6-12b2-45f0-9087-222889639d1c",
                            CreatedAt = new DateTime(2021, 12, 21, 15, 23, 51, 587, DateTimeKind.Utc).AddTicks(2655),
                            IsDeleted = false,
                            Key = "E-Mail Adresi",
                            UpdatedAt = new DateTime(2021, 12, 21, 15, 23, 51, 587, DateTimeKind.Utc).AddTicks(2656),
                            Value = "hasaerda@hotmail.com"
                        },
                        new
                        {
                            Id = 6,
                            ContactId = "06aa8dd6-12b2-45f0-9087-222889639d1c",
                            CreatedAt = new DateTime(2021, 12, 21, 15, 23, 51, 587, DateTimeKind.Utc).AddTicks(2657),
                            IsDeleted = false,
                            Key = "Konum",
                            UpdatedAt = new DateTime(2021, 12, 21, 15, 23, 51, 587, DateTimeKind.Utc).AddTicks(2658),
                            Value = "Şahinbey/Gaziantep"
                        },
                        new
                        {
                            Id = 7,
                            ContactId = "13539989-0439-4698-b694-ad6a8e65d5ab",
                            CreatedAt = new DateTime(2021, 12, 21, 15, 23, 51, 587, DateTimeKind.Utc).AddTicks(2729),
                            IsDeleted = false,
                            Key = "Telefon Numarası",
                            UpdatedAt = new DateTime(2021, 12, 21, 15, 23, 51, 587, DateTimeKind.Utc).AddTicks(2730),
                            Value = "+90 537 035 2059"
                        },
                        new
                        {
                            Id = 8,
                            ContactId = "13539989-0439-4698-b694-ad6a8e65d5ab",
                            CreatedAt = new DateTime(2021, 12, 21, 15, 23, 51, 587, DateTimeKind.Utc).AddTicks(2733),
                            IsDeleted = false,
                            Key = "E-Mail Adresi",
                            UpdatedAt = new DateTime(2021, 12, 21, 15, 23, 51, 587, DateTimeKind.Utc).AddTicks(2734),
                            Value = "hasaerda@hotmail.com"
                        },
                        new
                        {
                            Id = 9,
                            ContactId = "13539989-0439-4698-b694-ad6a8e65d5ab",
                            CreatedAt = new DateTime(2021, 12, 21, 15, 23, 51, 587, DateTimeKind.Utc).AddTicks(2735),
                            IsDeleted = false,
                            Key = "Konum",
                            UpdatedAt = new DateTime(2021, 12, 21, 15, 23, 51, 587, DateTimeKind.Utc).AddTicks(2736),
                            Value = "Şehitkamil/Gaziantep"
                        });
                });

            modelBuilder.Entity("ContactApp.API.Data.Model.ContactInfo", b =>
                {
                    b.HasOne("ContactApp.API.Data.Model.Contact", "Contact")
                        .WithMany("ContactInfos")
                        .HasForeignKey("ContactId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Contact");
                });

            modelBuilder.Entity("ContactApp.API.Data.Model.Contact", b =>
                {
                    b.Navigation("ContactInfos");
                });
#pragma warning restore 612, 618
        }
    }
}
